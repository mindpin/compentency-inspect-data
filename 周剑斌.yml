#java笔试题以及答案详解 一

#单选

- kind: single_choice
  content: 下列说法正确的有
  content_format: text
  answer:
    choices:
      - id: aaa
        text: class 中的 constructor 不可省略
      - id: bbb
        text: constructor 必须与 class 同名，但方法不能与 class 同名
      - id: ccc
        text: constructor 在一个对象被 new 时执行
      - id: ddd
        text: 一个 class 只能定义一个 constructor
    correct: ccc
  points:
    - 语法基础

- kind: single_choice
  content: 提供 Java 存取数据库能力的包是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: java.sql
      - id: bbb
        text: java.awt
      - id: ccc
        text: java.lang
      - id: ddd
        text: java.swing
    correct: aaa
  points:
    - 常用基础类库

- kind: single_choice
  content: 下列运算符合法的是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: "&&"
      - id: bbb
        text: "<>"
      - id: ccc
        text: fi
      - id: ddd
        text: ":="
    correct: aaa
  points:
    - 语法基础

- kind: single_choice
  content: |
    执行如下程序代码
    ```java
    a = 0;
    c = 0;
    do{
      --c;
      a = a - 1;
    }while(a > 0);
    ```
    后，C 的值是（）
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 0
      - id: bbb
        text: 1
      - id: ccc
        text: -1
      - id: ddd
        text: 死循环
    correct: ccc
  points:
    - 语法基础

- kind: single_choice
  content: 下列哪一种叙述是正确的（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: abstract修饰符可修饰字段、方法和类
      - id: bbb
        text: 抽象方法的 body 部分必须用一对大括号 { } 包住
      - id: ccc
        text: 声明抽象方法，大括号可有可无
      - id: ddd
        text: 声明抽象方法不可写出大括号
    correct: ddd
  points:
    - 抽象类，接口，继承

- kind: single_choice
  content: 下列语句正确的是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 形式参数可被视为 local variable
      - id: bbb
        text: 形式 参数可被字段修饰符修饰
      - id: ccc
        text: 形式参数为方法被调用时，真正被传递的参数
      - id: ddd
        text: 形式参数不可以是对象
    correct: aaa
  points:
    - 语法基础

- kind: single_choice
  content: 下列哪种说法是正确的（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 实例方法可直接调用超类的实例方法
      - id: bbb
        text: 实例方法可直接调用超类的类方法
      - id: ccc
        text: 实例方法可直接调用其他类的实例方法
      - id: ddd
        text: 实例方法可直接调用本类的 类方法
    correct: ddd
  points:
    - 类，对象，方法

# 多选题

- kind: multi_choice
  content: 下列说法错误的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 数组是一种对象
      - id: bbb
        text: 数组属于一种原生类
      - id: ccc
        text: int number = [ ] = {31, 23, 33, 43, 35, 63}
      - id: ddd
        text: 数组的大 小可以任意改变
    corrects:
      - bbb
      - ccc
      - ddd
  points:
    - 常见数据类型

- kind: multi_choice
  content: 不能用来修饰interface的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: private
      - id: bbb
        text: public
      - id: ccc
        text: protected
      - id: ddd
        text: static
    corrects:
      - aaa
      - ccc
      - ddd
  points:
    - 抽象类，接口，继承

- kind: multi_choice
  content: 下列说法 错误的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 在类方法中可用 this 来调用本类的类方法
      - id: bbb
        text: 在类方法中调用本类的类方法时可直接调用
      - id: ccc
        text: 在类方法中只能调用本类中的类方法
      - id: ddd
        text: 在类方法中绝对不能调用实例方法
    corrects:
      - ccc
      - ddd
  points:
    - 类，对象，方法

- kind: multi_choice
  content: 下列说法错误的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text:  Java 面向对象语言容许单独的过程与函数存在
      - id: bbb
        text: Java 面向对象语言容许单独的方法存在
      - id: ccc
        text: Java 语言中的方法属于类中的成员（member）
      - id: ddd
        text: Java 语言中的方法必定隶属于某一类（对象），调用方法与过程或函数相同
    corrects:
      - aaa
      - bbb
      - ccc
  points:
    - 类，对象，方法

# JAVA期末考试2015选修班试卷及部分答案

# 单选题

- kind: single_choice
  content: |
    2年前,2013年6月18日,中国天河2号成为全银河系列中速度最快的超级计算机。它以峰值计算速度每秒5.49亿亿次、持续计算速度每秒3.39亿亿次双精度浮点运算的优异性能位居榜首。若需要存储以上两个数值,最好使用（）类型的变量。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: int
      - id: bbb
        text: long
      - id: ccc
        text: float
      - id: ddd
        text: double
    correct: ddd
  points:
    - 常见数据类型

- kind: single_choice
  content: |
    对于下列代码
    ```java
    1)  class Person {
    2)  public void printValue(int i, int j) {//... }
    3)  public void printValue(int i){//... }
    4)  }
    5)  public class Teacher extends Person {
    6)  public void printValue() {//... }
    7)  public void printValue(int i) {//...}
    8)  public static void main(String args[]){
    9)  Person t = new Teacher();
    10)
    ```
    第10行语句将调用哪行语句 ( )
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 第2行
      - id: bbb
        text: 第3行
      - id: ccc
        text: 第6行
      - id: ddd
        text: 第7行
    correct: ddd
  points:
    - 抽象类，接口，继承

- kind: single_choice
  content: |
    应用程序的 main 方法中有以下语句
    ```java
    String  s1 = "abc";
    String  s2 = "abc";
    boolean b1 = s1.equals(s2);
    boolean b2 = (s1 == s2);
    System.out.print(b1 + "   " + b2);
    ```
    则输出的结果是 ( )
  content_format: md
  answer:
    choices:
      - id: aaa
        text: true  false
      - id: bbb
        text: false  true
      - id: ccc
        text: true  true
      - id: ddd
        text: false  false
    correct: aaa
  points:
    - 常见数据类型

- kind: single_choice
  content: |
    以下程序段
    ```java
    String   s = "12345#aaa#bbb#67890";
    int   n = s.indexOf("#");
    int   k = s.indexOf("#", n + 1);
    int   m = s.indexOf("#", k + 1);
    String  s2 = s.substring(m + 1);
    System.out.println(s2);
    ```
    的输出结果是 ( )
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 123456
      - id: bbb
        text: 67890
      - id: ccc
        text: aaa
      - id: ddd
        text: bbb
    correct: bbb
  points:
    - 常见数据类型

- kind: single_choice
  content: |
    应用程序的main方法中有以下语句
    ```java
    int  b[ ][ ]={{1}, {2, 2}, {2, 2, 2}};
      int sum = 0;
      for(int i = 0; i < b.length; i++) {
        for(int  j= 0; j < b[i].length; j++) {
          sum += b[i][j];
        }
      }
    System.out.println("sum = " + sum);
    ```
    则输出的结果是 ( )
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 32
      - id: bbb
        text: 11
      - id: ccc
        text: 2
      - id: ddd
        text: 3
    correct: aaa
  points:
    - 语法基础

- kind: single_choice
  content: |
    应用程序的main方法中有以下语句
    ```java
    int[]  x = {125, 21, 5, 168, 98};
    int  min = x[0];
    int  index = 0;
    for(int i = 1; i < x.length; i++){
      if(x[i] < min)
      {
        min = x[i];
        index = i;
      }
    }
    System.out.println(min + ", " + index);
    ```
    则执行后输出的结果是 ( )
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 125, 0
      - id: bbb
        text: 5, 2
      - id: ccc
        text: 98, 4
      - id: ddd
        text:  168, 3
    correct: bbb
  points:
    - 常见数据类型

- kind: single_choice
  content: |
    如下代码
    ```java
    public class Test {
      String s1 = "java";
      public static void main(String args[]) {
        int z = 2;
        Test t = new Test();
        System.out.println(t.s1 + z);
      }
    }
    ```
    程序Test.java编译运行后输出的结果是 ( )
  content_format: md
  answer:
    choices:
      - id: aaa
        text: java2
      - id: bbb
        text: 2
      - id: ccc
        text: 没有输出结果
      - id: ddd
        text: java
    correct: aaa
  points:
    - 语法基础

- kind: single_choice
  content: |
    应用程序的main方法中有以下语句
    ```java
    String s1 = "0.5", s2 = "12";
    double x = Double.parseDouble(s1);
    int  y = Integer.parseInt(s2);
    System.out.println("" + x + y);
    ```
    则输出的结果是 ( )
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 12.5
      - id: bbb
        text: 120.5
      - id: ccc
        text: 12
      - id: ddd
        text: “12.5”
    correct: aaa
  points:
    - 常见数据类型

# 多选题

- kind: multi_choice
  content: 在语句 "System.out.println("hello, Java");", 静态成员是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: System
      - id: bbb
        text: out
      - id: ccc
        text: println
      - id: ddd
        text: 没有
    corrects:
      - bbb
      - ccc
  points:
    - 类，对象，方法

- kind: multi_choice
  content: 面向对象编程技术的基本特征是
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 封装
      - id: bbb
        text: 封闭
      - id: ccc
        text: 继承
      - id: ddd
        text: 多态
    corrects:
      - aaa
      - ccc
      - ddd
  points:
    - 类，对象，方法

# JAVA试题及答案(50道选择题)

# 单选题

- kind: single_choice
  content: 关于面向对象的说法正确的是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 类可以让我们用程序模拟现实世界中的实体
      - id: bbb
        text: 有多少个实体就要创建多少个类
      - id: ccc
        text: 对象的行为和属性被封装在类中，外界通过调用类的方法来获得，但是要知道类的内部是如何实现
      - id: ddd
        text: 现实世界中的某些实体不能用类来描述
    correct: aaa
  points:
    - 类，对象，方法

#- kind: single_choice
  #content: 以下关于布局的说法，错误的是（   ）
  #content_format: text
  #answer:
    #choices:
      #- id: aaa
        #text: BorderLayout是边框布局，它是窗体的默认布局
      #- id: bbb
        #text: null是空布局，它是面板的默认布局
      #- id: ccc
        #text: FlowLayout是流布局，这种布局将其中的组件按照加入的先后顺序从左向右排列， 一行排满之后就转到下一行继续从左至右排列
      #- id: ddd
        #text: GridLayout是网格布局，它以矩形网格形式对容器的组件进行布置。容器被分成大小相等的矩形，一个矩形中放置一个组件
    #correct: bbb

- kind: single_choice
  content: 在 JAVA 中 ArrayList 类实现了可变大小的数组，便于遍历元素和随机访问元素，已知获得了 ArrayList 类的对象 bookTypeList, 则下列语句中能够实现判断列表中是否存在字符串“小说”的是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: bookTypeList.add("小说");
      - id: bbb
        text: bookTypeList.get("小说");
      - id: ccc
        text: bookTypeList.contains("小说");
      - id: ddd
        text: bookTypeList.remove("小说");
    correct: ccc
  points:
    - 常用基础类库

# 多选题

- kind: multi_choice
  content: 以下关于抽象类和接口的说法错误的是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 抽象类在 Java 语言中表示的是一种继承关系，一个类只能使用一次继承。但是一个类却可以实现多个接口
      - id: bbb
        text: 在抽象类中可以没有抽象方法
      - id: ccc
        text: 实现抽象类和接口的类必须实现其中的所有方法，除非它也是抽象类。接口中的方法都不能被实现
      - id: ddd
        text: 接口中定义的变量默认是 public static final 型，且必须给其初值，所以实现类中不能重新定义，也不能改变其值
      - id: eee
        text: 接口中的方法都必须加上 public 关键字
    corrects:
      - eee
  points:
    - 抽象类，接口，继承

#- kind: multi_choice
  #content: 48、以下用于创建容器对象的类是（    ）（选择两项）
  #content_format: text
  #answer:
    #choices:
      #- id: aaa
        #text: Frame
      #- id: bbb
        #text: Checkbox
      #- id: ccc
        #text: Panel
      #- id: ddd
        #text: TextField
    #corrects:
      #- aaa
      #- ccc
