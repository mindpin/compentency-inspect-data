- kind: multi_choice
  content:  在 Hibernate 中，下列关于 SessionFactory 说法正确的有()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 它不是线程安全的 
      - id: bbb
        text: 它是线程安全的
      - id: ccc
        text: 一个 SessionFactory  实例对应一个数据存储源
      - id: ddd
        text: 它是轻量级的
    corrects:
      - bbb
      - ccc
  points:
    - hibernate

- kind: single_choice
  content: 关于 Hibernate, 下列说法错误的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Hibernate 是一个对象-关系映射工具
      - id: bbb
        text: 在 MVC 模式中，Hibernate 属于控制层
      - id: ccc
        text: Hibernate 在 JDBC 的方式上进行封装，以简化 JDBC 方式繁琐的编码工作
      - id: ddd
        text: 在Hibernate 中，可以通过 xml 格式的配置文件保存对象-关系的映射信息
    correct: bbb
  points:
    - hibernate

- kind: multi_choice
  content: 在 Hibernate 中，下列关于 Transaction 说法正确的有()。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 在对数据库进行查询操作时一定要加上 Transaction
      - id: bbb
        text: 事务 Transaction 为应用程序指定以原子操作单元为范围的对象
      - id: ccc
        text: 在对数据库进行增加、修改和删除操作时一定要加上 Transaction
      - id: ddd
        text: 获得 Transaction 的方法：Transaction tr = session.beginTransaction();
    corrects:
      - bbb
      - ccc
      - ddd
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，下列哪个选项不属于 Session 的方法()。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: load
      - id: bbb
        text: save
      - id: ccc
        text: open
      - id: ddd
        text: delete
    correct: ccc
  points:
    - hibernate

- kind: single_choice
  content:  在 Hibernate 中， generator 属性值如果是 native , 则表示()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 由 Hibernate 自动以自增的方式生成标识符，每次增量为1
      - id: bbb
        text: 由 Hibernate 自动以自增的方式生成标识符，每次增量为自定义
      - id: ccc
        text: 根据底层数据库对自动生成标识符的支持来选择。
      - id: ddd
        text: 由 Java 应用程序负责生成标识符
    correct: ccc
  points:
    - hibernate

- kind: multi_choice
  content: 下 Hibernate 增加数据的时候，可以调用 session的()方法。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: save 
      - id: bbb
        text: update 
      - id: ccc
        text: add 
      - id: ddd
        text: saveOrUpdate 
    corrects:
      - aaa
      - ddd
  points:
    - hibernate

- kind: single_choice
  content: Hibernate 对 JDBC 访问数据库的代码进行了封装，从而大大简化了数据访问层的重复性代码，它是针对三层架构中()的解决方案。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 表现层
      - id: bbb
        text: 业务逻辑层
      - id: ccc
        text: 持久化层
      - id: ddd
        text: 数据库系统
    correct: ccc
  points:
    - hibernate

- kind: single_choice
  content: 下列选项不属于持久化的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 将对象转换为字符串的形式通过网络传输，在另一端接收到该字符串后能将对象还原
      - id: bbb
        text: 将程序数据从数据库中读取出来
      - id: ccc
        text: 从 XML 配置文件中读取程序的配置信息
      - id: ddd
        text: 将程序数据保存为文件
    correct: aaa
  points:
    - hibernate

- kind: single_choice
  content: 使用 Hibernate 技术实现数据库持久化时，下列()不在 Hibernate 配置文件里
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 数据库连接信息
      - id: bbb
        text: 数据库表和实体的映射信息
      - id: ccc
        text: show_sql 参数
      - id: ddd
        text: 数据库类型(dialect)
    correct: bbb
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，inverse属性值为()时，会标识被控方。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: all 
      - id: bbb
        text: false
      - id: ccc
        text: true 
      - id: ddd
        text: none
    correct: ccc
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，如果需要标识主控方，则inverse属性值应为()。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: all 
      - id: bbb
        text: false 
      - id: ccc
        text: true 
      - id: ddd
        text: none
    correct: bbb
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，从性能方面考虑，inverse 属性值通常设置为()。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: all 
      - id: bbb
        text: false 
      - id: ccc
        text: true 
      - id: ddd
        text: none 
    correct: bbb
  points:
    - hibernate

- kind: multi_choice
  content: Hibernate 通过映射文件中的 <generator> 子元素来设定标识符生成器，下列选项哪些是 Hibernate 提供的内置实现()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: hilo 
      - id: bbb
        text: native 
      - id: ccc
        text: assign 
      - id: ddd
        text: indentity 
    corrects:
      - aaa
      - bbb
      - ddd
  points:
    - hibernate

- kind: single_choice
  content: 在 ORM 中，面向对象概念中的对象与面向关系概念中的()相对应。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 表
      - id: bbb
        text: 表的行
      - id: ccc
        text: 表的列
      - id: ddd
        text: 表中行的数据
    correct: bbb
  points:
    - hibernate


- kind: single_choice
  content: 在 Hibernate 的实体类映射文件中，class 节点下必须有一个 id 节点，其中 unsaved-value 属性的默认值为()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: null
      - id: bbb
        text: none
      - id: ccc
        text: true
      - id: ddd
        text: false
    correct: aaa
  points:
    - hibernate

- kind: single_choice
  content: 下列选项关于 Configuration 的说法不正确的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Configuration 类的构造方法用于将默认路径下的 hibernate.cfg.xml（或hibernate.properties）配置文件中的配置信息读入到内存中
      - id: bbb
        text: Configuration 对象用于配置并启动 Hibernate 
      - id: ccc
        text: 获得 Configuration 的方法：Configuration config = new Configuration()；
      - id: ddd
        text: Hibernate 应用通过 Configuration 实例指定对象－关系映射文件的位置或者动态配置
    correct: ccc
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，当 cascade 属性值为()时，表示不进行级联操作。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: all 
      - id: bbb
        text: no 
      - id: ccc
        text: none 
      - id: ddd
        text: delete 
    correct: ccc
  points:
    - hibernate

- kind: multi_choice
  content: 在 Hibernate 中，如果需要进行级联删除，则 cascade 属性值可为()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: all 
      - id: bbb
        text: save-update
      - id: ccc
        text: none
      - id: ddd
        text: delete
    corrects:
      - aaa
      - ddd
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，要想在删除某个客户数据的同时删除该客户对应的所有订单数据，下列方法可行的有()。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 配置客户和订单关联的 cascade 属性为 save-update
      - id: bbb
        text: 配置客户和订单关联的 cascade 属性为 all
      - id: ccc
        text: 设置多对一关联的 inverse 属性为 true
    correct: bbb
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，<set>元素有一个 cascade 属性，如果希望 Hibernate 级联保存集合中的对象，则 cascade 属性应该取什么值()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: none
      - id: bbb
        text: save
      - id: ccc
        text: save-update
      - id: ddd
        text: delete
    correct: ccc
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，Customer 类中有一个 Set 类型的 orders 属性，用于存放 Order 订单对象，在 Customer.hbm.xml 文件中，可以用()元素映射 orders 属性。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: <set>
      - id: bbb
        text: <one-to-many>
      - id: ccc
        text: <many-to-one>
      - id: ddd
        text: <property> 
    correct: aaa
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 的 HQL 查询中，下列说法正确的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 可以调用用户自定义函数
      - id: bbb
        text: 不可以调用用户自定义函数
      - id: ccc
        text: 支持子查询
      - id: ddd
        text: 支持分页查询
    correct: bbb
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 的 HQL 查询中，下列说法不正确的是()。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 在 Hibernate3 中，可以使用 update 、delete 子句
      - id: bbb
        text: 在 Hibernate3 中，不可以使用 update 、delete 子句
      - id: ccc
        text: HQL 是基于 SQL 的
      - id: ddd
        text: HQL 提供了更多面向对象的封装
    correct: bbb
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 的 HQL 查询中，setMaxResults(3) 方法中参数值3指的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 从第3条记录开始
      - id: bbb
        text: 从第4条记录开始
      - id: ccc
        text: 查询3条记录
      - id: ddd
        text: 查询4条记录
    correct: ccc
  points:
    - hibernate


- kind: single_choice
  content: 在 Hibernate 的 HQL 查询中，setFirstResults(3) 方法中参数值3指的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 从第3条记录开始
      - id: bbb
        text: 从第4条记录开始
      - id: ccc
        text: 查询3条记录
      - id: ddd
        text: 查询4条记录
    correct: bbb
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 的 HQL 查询中，下列说法不正确的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: HQL 子句本身的大小写没有差异，但类名和属性名必须区分大小写
      - id: bbb
        text: HQL 支持 where 子句
      - id: ccc
        text: HQL 支持 as 子句
      - id: ddd
        text: where 、as 关键字区分大小写
    correct: ddd
  points:
    - hibernate

- kind: multi_choice
  content: 在 Hibernate 的 HQL 查询中，有数据库表（dept）对应的对象名称为 Dept , 下列 HQL 写法正确的有()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: String hql = "from com.hr.g3.persist.dept as model"
      - id: bbb
        text: String hql = "from com.hr.g3.persist.Dept "
      - id: ccc
        text: String hql = "from Dept as model"
      - id: ddd
        text: String hql = "from dept "
    corrects:
      - bbb
      - ccc
  points:
    - hibernate

- kind: multi_choice
  content: 关于 HQL 查询，下列说法正确的有()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: HQL 查询的 select 子句中必须区分大小写
      - id: bbb
        text: HQL 支持不统计函数
      - id: ccc
        text: HQL 支持仅查询对象的某几个属性，查询结果保存于 Object 数组中
      - id: ddd
        text: HQL 查询为官方推荐的查询方式
    corrects:
      - ccc
      - ddd
  points:
    - hibernate

- kind: multi_choice
  content: 关于 HQL 与 SQL, 下列说法正确的有()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: HQL 与 SQL 没有多少差别
      - id: bbb
        text: HQL 面向对象，而 SQL 操纵关系数据库
      - id: ccc
        text: 在 HQL 与 SQL 中，都包含 select, insert, update, delete 语句
      - id: ddd
        text: HQL 仅用于查询数据，不支持 insert, update 和 delete 语句
    corrects:
      - bbb
      - ccc
  points:
    - hibernate

- kind: single_choice
  content: 在 HQL 语言中，Query 对象特别提供了()方法，用于获得一个唯一行唯一列的对象。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: list
      - id: bbb
        text: uniqueResult
      - id: ccc
        text: result
      - id: ddd
        text: queryResult
    correct: bbb
  points:
    - hibernate

- kind: single_choice
  content: 关于 HQL 查询，下列说法错误的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: HQL 查询可以执行 T-SQL 语句，执行速度更快
      - id: bbb
        text: HQL 支持只查询对象的某几个属性，查询结果将保存在一个 Object 数组中
      - id: ccc
        text: HQL 支持统计函数
      - id: ddd
        text: HQL 语句可以实现类似 PreparedStatement 的效果
    correct: aaa
  points:
    - hibernate

- kind: single_choice
  content: 在 JAVA 中，关于属性文件，下列选项说法正确的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 属性文件以名称和值的形式保存信息
      - id: bbb
        text: 属性文件不能写中文
      - id: ccc
        text: 属性文件中能保存各种数据类型的信息
      - id: ddd
        text: 属性文件的文件扩展名是.xml
    correct: aaa
  points:
    - hibernate

- kind: multi_choice
  content: |
    在 Hibernate 中，下列关于 HQL 参数绑定的写法正确的有
    ```java
    String hql = "from Dept as model where model.deptName = ? and model.createDate = ? ";
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 第一个参数的位置为0
      - id: bbb
        text: 第一个参数的位置为1
      - id: ccc
        text: 设置参数的方法为：setEntity() 
      - id: ddd
        text: 设置参数的方法为：setParameter()
    corrects:
      - aaa
      - ddd
  points:
    - hibernate

- kind: single_choice
  content: Criteria 查询通过面向对象化的设计将数据查询条件封装为一个()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 对象
      - id: bbb
        text: 序列
      - id: ccc
        text: 类
      - id: ddd
        text: HQL语句
    correct: aaa
  points:
    - hibernate

- kind: multi_choice
  content: 在 Hibernate 的 Criteria 查询中，Expression 对象具体描述了查询条件，其对应 SQL 条件中的 field >= value 的方法是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Expression.eq
      - id: bbb
        text: Expression.gt
      - id: ccc
        text: Expression.ge 
      - id: ddd
        text: Expression.lt
    corrects:
      - aaa
      - ccc
  points:
    - hibernate

- kind: multi_choice
  content: 在 Hibernate 的 Criteria 查询中，Expression 对象具体描述了查询条件，其中 Expression.le 对应的 SQL 条件是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: field > value
      - id: bbb
        text: field >= value
      - id: ccc
        text: field < value
      - id: ddd
        text: field <= value
    corrects:
      - aaa
      - ddd
      - ccc
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 的 Criteria 查询中，从第5条记录开始查询的方法是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: criteria.setFirstResult(4);
      - id: bbb
        text: criteria.setFirstResult(5);
      - id: ccc
        text: criteria.setMaxResult(4);
      - id: ddd
        text: criteria.setMaxResult(5); 
    correct: aaa
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 的 Criteria 查询中，查询5条记录的方法是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: criteria.setFirstResult(4);
      - id: bbb
        text: criteria.setFirstResult(5);
      - id: ccc
        text: criteria.setMaxResult(4); 
      - id: ddd
        text: criteria.setMaxResult(5);
    correct: ddd
  points:
    - hibernate

- kind: multi_choice
  content: 在 Hibernate 的 Criteria 查询中，下列按创建日期进行排序的方法是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: criteria.addOrder(Order.asc("createDate"));
      - id: bbb
        text: criteria.addOrder(Order.desc("createDate")); 
      - id: ccc
        text: criteria.saveOrder(Order.asc("createDate"));
      - id: ddd
        text: criteria.saveOrder(Order.desc("createDate")); 
    corrects:
      - bbb
      - ddd
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，下列说法不正确的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: HQL 是基于 SQL 的
      - id: bbb
        text: HQL 提供更加面向对象的封装
      - id: ccc
        text: HQL 是 Hibernate 官方推荐的查询方式
      - id: ddd
        text: HQL 提供的是面向关系型数据库的。
    correct: ddd
  points:
    - hibernate

- kind: single_choice
  content: 对于 HQL 中的 as 关键字，下列说法正确的是()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 必须要有
      - id: bbb
        text: 必须没有
      - id: ccc
        text: 可以有，也可以没有
    correct: ccc
  points:
    - hibernate

- kind: single_choice
  content: 在 Hibernate 中，用于比较字符串的 like 操作符"like '部%'"表示()
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 所有以“部”开头的字符串
      - id: bbb
        text: 所有以“部”结尾的字符串
      - id: ccc
        text: 所有包括“部”的字符串
      - id: ddd
        text: 所有包括“部”且“部”不在开头和结尾的字符串
    correct: aaa
  points:
    - hibernate
