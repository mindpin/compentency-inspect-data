# 单选题
- kind: single_choice
  content: 在单一文件中 import、class 和 package 的正确出现顺序是：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: package, import, class
      - id: bbb
        text: class, import, package
      - id: ccc
        text: import, package, class
      - id: ddd
        text: package, class, import
    correct: aaa
  points:
    - 语法基础

- kind: single_choice
  content: |
    编译，运行下列代码后的结果是：
    ```java
    public class Test {
      public static void main ( String args [] ) {
        int age;
        age = age + 1;
        System.out.println( "The age is " + age );
      }
    }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译，运行后没有输出
      - id: bbb
        text: 编译，运行后输出：The age is 1
      - id: ccc
        text: 能通过编译，但运行时产生错误
      - id: ddd
        text: 不能通过编译
    correct: ddd
  points:
    - 语法基础

- kind: single_choice
  content: 内部数据类型 byte 的取值范围是
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 0 - 65, 535
      - id: bbb
        text: (–128) – 127
      - id: ccc
        text: (–32, 768) – 32,767
      - id: ddd
        text: (–256) – 255
    correct: bbb
  points:
    - 常见数据类型

- kind: single_choice
  content: 声明公用的 abstract 方法的正确格式是
  content_format: text
  answer:
    choices:
      - id: aaa
        text: public abstract void add();
      - id: bbb
        text: public abstract void add() {}
      - id: ccc
        text: public abstract add();
      - id: ddd
        text: public virtual add();
    correct: aaa
  points:
    - 抽象类，接口，继承

- kind: single_choice
  content: |
    下面的代码能打印出的结果为：
    ```java
      int i = 1;
      switch (i) {
        case 0:
          System.out.println( "zero" );
          break;
        case 1:
          System.out.println( "one" );
        case 2:
          System.out.println( "two" );
        default:
          System.out.println( "default" );
      }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: one
      - id: bbb
        text: one, default
      - id: ccc
        text: one, two, default
      - id: ddd
        text: default
    correct: ccc
  points:
    - 语法基础

- kind: single_choice
  content: |
    下面的代码能打印出的结果为：
    ```java
      int i = 9;
      switch (i) {
        default:
          System.out.println( "default" );
        case 0:
          System.out.println( "zero" );
          break;
        case 1:
          System.out.println( "one" );
        case 2:
          System.out.println( "two" );
      }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: default
      - id: bbb
        text: default, zero
      - id: ccc
        text: error default clause not defined
      - id: ddd
        text: no output displayed
    correct: bbb
  points:
    - 语法基础

- kind: single_choice
  content: |
    当你试图准备编译，运行下面代码时会发生：
    ```java
      class Base {}
      class Sub extends Base {}
      class Sub2 extends Base {}
      public class CEx{
        public static void main( String argv[] ){
          Base b = new Base();
          Sub s = ( Sub ) b;
        }
      }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译和运行很正常
      - id: bbb
        text: 编译时错误
      - id: ccc
        text: 运行时错误
    correct: ccc
  points:
    - 类，对象，方法

- kind: single_choice
  content: |
    当你试图准备编译，运行下面代码时会发生：
    ```java
    public class Tux extends Thread{
      static String sName = "vandeleur";
      public static void main( String argv[] ){
        Tux t = new Tux();
        t.piggy( sName );
        System.out.println( sName );
      }
      public void piggy( String sName ){
        sName = sName + " wiggy";
        start();
      }
      public void run(){
          for(int i = 0; i < 4; i++){
          sName = sName + " " + i;
        }
      }
    }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译时错误
      - id: bbb
        text: 编译成功，并打印出 "vandeleur wiggy"
      - id: ccc
        text: 编译成功，并打印出 "vandeleur wiggy 0 1 2 3"
      - id: ddd
        text: 编译成功，并打印出 "vandelur"
    correct: ddd
  points:
    - 类，对象，方法

- kind: single_choice
  content: 在什么情况下类获得默认的构造方法：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 类被定义时
      - id: bbb
        text: 类中没有定义任何构造方法时
      - id: ccc
        text: 在类中至少定义了一个构造方法时
    correct: bbb
  points:
    - 类，对象，方法

- kind: single_choice
  content: 假定有一个包含引起异常（不是一个 RuntimeException ）的代码的方法，用什么方式告诉方法的调用者要捕获该异常：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: throw Exception
      - id: bbb
        text: throws Exception
      - id: ccc
        text: new Exception
      - id: ddd
        text: 不用特别指定
    correct: bbb
  points:
    - 语法基础

- kind: single_choice
  content: 运行下面代码能够得出的结果？
  content_format: text
  answer:
    choices:
      - id: aaa
        text: throw Exception
      - id: bbb
        text: throws Exception
      - id: ccc
        text: new Exception
      - id: ddd
        text: 不用特别指定
    correct: bbb
  points:
    - 语法基础

- kind: single_choice
  content: |
    ```java
      System.out.println( 4 | 3 );
    ```
    能打印出什么结果？
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 6
      - id: bbb
        text: 0
      - id: ccc
        text: 1
      - id: ddd
        text: 7
    correct: ddd
  points:
    - 语法基础

- kind: single_choice
  content: |
    传递4，0来运行下列代码中的方法 divide( int a, int b )，结果是：
    ```java
      public void divide( int a, int b ) {
        try {
          int c = a / b;
         } catch ( Exception e ) {
          System.out.print( "Exception " );
        } finally {
          System.out.println( "Finally" );
      }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: '打印输出: Exception Finally'
      - id: bbb
        text: '打印输出: Finally'
      - id: ccc
        text: '打印输出: Exception'
      - id: ddd
        text: 没有任何输出
    correct: aaa
  points:
    - 语法基础

- kind: single_choice
  content: 对 public void add( int a ) {…}方法的重写方法：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 必须返回 void
      - id: bbb
        text: 必须返回 in
      - id: ccc
        text: 可以返回任何需要的类型
    correct: aaa
  points:
    - 类，对象，方法

- kind: single_choice
  content: 对 public void add( int a ) {…}方法的重载方法应返回：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: void
      - id: bbb
        text: int
      - id: ccc
        text: 任何类型
    correct: ccc
  points:
    - 类，对象，方法

- kind: single_choice
  content: |
    下列类分别在不同的文件中定义：
    ```java
    class Vehicle {
      public void drive() {
        System.out.println( "Vehicle: drive" );
      }
    }
    class Car extends Vehicle {
      public void drive() {
        System.out.println( "Car: drive" );
      }
    }

    public class Test {
      public static void main ( String args [] ) {
        Vehicle v;
        Car c;
        v = new Vehicle();
        c = new Car();
        v.drive();
        c.drive();
        v = c;
        v.drive();
      }
    }
    ```
    编译和执行类 Test 后，结果是：
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 在语句 v = c; 处产生编译时错误
      - id: bbb
        text: 在语句 v = c; 处产生运行时错误
      - id: ccc
        text: '输出 Vehicle: drive, Car: drive, Car: drive'
      - id: ddd
        text: '输出 Vehicle: drive, Car: drive, Vehicle: drive'
    correct: ccc
  points:
    - 类，对象，方法

- kind: single_choice
  content: 在子类构造方法内的什么位置可以对超类的构造方法 ( super() ) 进行调用：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 子类构造方法的任何地方
      - id: bbb
        text: 子类构造方法的第一条语句处
      - id: ccc
        text: 子类构造方法的最后一条语句处
      - id: ddd
        text: 不能对超类的构造方法进行调用
    correct: bbb
  points:
    - 类，对象，方法

- kind: single_choice
  content: |
    下列代码中有明显的语法错误的语句是：
    ```java
    1. public class Test {
    2.   public static void main ( String args [] ) {
    3.     Employee e = new Employee( "Bob", 48 );
    4.     e.calculatePay();
    5.     System.out.println( e.printDetails() );
    6.     e = Null;
    7.     e = new Employee( "Denise", 36 );
    8.     e.calculatePay();
    9.     System.out.println( e.printDetails() );
    10.  }
      }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: Line 10
      - id: bbb
        text: Line 11
      - id: ccc
        text: Line 6
      - id: ddd
        text: Line 8
    correct: ccc
  points:
    - 语法基础

- kind: single_choice
  content: |
    下面的代码编译，运行后得出的结果：
    ```java
    ublic class Conv{
      public static void main( String argv[] ){
        Conv c = new Conv();
        String s = new String( "ello" );
        c.amethod( s );
      }
      public void amethod( String s ){
        char c = 'H';
        c += s;
         System.out.println( c );
      }
    }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译成功，打印出 "Hello"
      - id: bbb
        text: 编译成功，打印出 "ello"
      - id: ccc
        text: 编译成功，打印出 elloH
      - id: ddd
        text: 编译错误
    correct: ddd
  points:
    - 常见数据类型

- kind: single_choice
  content: |
    执行后打印的结果为：
    ```java
    public class Oct{
      public static void main( String argv[] ){
        Oct o = new Oct();
        o.amethod();
      }
      public void amethod(){
        int oi = 012;
        System.out.println( oi );
      }
    }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 12
      - id: bbb
        text: 012
      - id: ccc
        text: 10
      - id: ddd
        text: 10.0
    correct: ccc
  points:
    - 常见数据类型

- kind: single_choice
  content: |
    编译，执行下面的代码会出现的结果：
    ```java
    public class Ref{
      public static void main( String argv[] ){
        Ref r = new Ref();
        r.amethod( r );
      }
      public void amethod( Ref r ){
        int i = 99;
        multi( r );
        System.out.println( i );
      }
      public void multi( Ref r ){
        r.i = r.i * 2;
      }
    }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 一个编译时错误
      - id: bbb
        text: 99
      - id: ccc
        text: 198
      - id: ddd
        text: 一个运行时错误
    correct: aaa
  points:
    - 类，对象，方法

- kind: single_choice
  content: 现在你存储一个唯一的整型序列，那么你需要哪个容器接口？
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Set
      - id: bbb
        text: List
      - id: ccc
        text: Map
      - id: ddd
        text: Vector
    correct: aaa
  points:
    - 常见数据类型

- kind: single_choice
  content: |
    ```java
    System.out.println( Math.floor(-2.1) );
    ```
    打印的结果为：
  content_format: md
  answer:
    choices:
      - id: aaa
        text: -2
      - id: bbb
        text: 2.0
      - id: ccc
        text: -3
      - id: ddd
        text: -3.0
    correct: ddd
  points:
    - 常用基础类库

- kind: single_choice
  content: 下面的语句中正确的表达式为。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: byte b = 128;
      - id: bbb
        text: boolean n = null;
      - id: ccc
        text: double d = 0.9239d;
      - id: ddd
        text: float f = 0.9239;
    correct: ccc
  points:
    - 语法基础

- kind: single_choice
  content: 将一个十六进制值赋给一个 long 型变量的正确写法为。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: long number = 345L;
      - id: bbb
        text: long number = 0345;
      - id: ccc
        text: long number = 0345L;
      - id: ddd
        text: long number = 0x345L;
    correct: ddd
  points:
    - 语法基础

- kind: single_choice
  content: |
    以下程序代码的输出是。（）
    ```java
    public class test (
      public static void main ( String args[] ) (
        System.out.printIn( 6 ^ 3 );
      )
    )
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 3
      - id: bbb
        text: 5
      - id: ccc
        text: 6
      - id: ddd
        text: 11
    correct: ddd
  points:
    - 语法基础

- kind: single_choice
  content: |
    以下程序代码执行后，哪个说法正确？（）
    ```java
    int index = 1;
    boolean[] test = new Boolean[ 3 ];
    boolean foo = test [ index ];
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 有异常抛出。
      - id: bbb
        text: 无法编译。
      - id: ccc
        text: foo 的值是 0。
      - id: ddd
        text: foo 的值是 null。
      - id: eee
        text: foo 的值是 true。
      - id: fff
        text: foo 的值是 false。
    correct: bbb
  points:
    - 常见数据类型

# 多选题
- kind: multi_choice
  content: 下列说法错误的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 数组是一种对象
      - id: bbb
        text: 数组属于一种原生类
      - id: ccc
        text: int number = [] = {31,23,33,43,35,63}
      - id: ddd
        text: 数组的大小可以任意改变
    corrects:
      - bbb
      - ccc
      - ddd
  points:
    - 常见数据类型

- kind: multi_choice
  content: 在下面的选项中合法的标识符有。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: _ok
      - id: bbb
        text: "*point"
      - id: ccc
        text: this
      - id: ddd
        text: $byte
      - id: eee
        text: const
      - id: fff
        text: ILikeJLCSS
    corrects:
      - aaa
      - ddd
      - eee
      - fff
  points:
    - 语法基础

- kind: multi_choice
  content: 下面的叙述中正确的有。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: equals() 方法判定引用值是否指向同一对象。
      - id: bbb
        text: == 操作符判定两个分立的对象的内容和类型是否一致。
      - id: ccc
        text: equals() 方法只有在两个对象的内容一致时返回 true。
      - id: ddd
        text: 类 File 重写方法 equals() 在两个分立的对象的内容和类型一致时返回 true。
    corrects:
      - ccc
  points:
    - 类，对象，方法

- kind: multi_choice
  content: |
    一个类 Example 的 main() 方法的参数是 args, 类被如下调用执行：
    ```
    java Example cat
    ```
    main 方法中访问 args[0] 的输出是什么？
  content_format: md
  answer:
    choices:
      - id: aaa
        text: cat
      - id: bbb
        text: java
      - id: ccc
        text: Example
      - id: ddd
        text: 抛出一个 NullPointerException 异常
      - id: eee
        text: 抛出一个 ArrayIndexOutOfBoundsException 异常
    corrects:
      - aaa
  points:
    - 类，对象，方法

- kind: multi_choice
  content: |
    给出下列代码，请选择 2 个正确输出？
    ```java
    public class Example{
      public static void main( String args[] ){
        int i = 0;
        do{
          System.out.println( "Doing it for i is" + i );
        }
        while ( --i > 0 );
          System.out.println( "Finished" );
      }
    }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: Doing it for i is 3
      - id: bbb
        text: Doing it for i is 2
      - id: ccc
        text: Doing it for i is 1
      - id: ddd
        text: Doing it for i is 0
      - id: eee
        text: Finished
    corrects:
      - ddd
      - eee
  points:
    - 语法基础

- kind: multi_choice
  content: 选择定义在 Graphics 类中的方法：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: drawLine( int, int, int, int );
      - id: bbb
        text: drawImage( Image, int, int, ImageObserver );
      - id: ccc
        text: drawString( String, int, int );
      - id: ddd
        text: add( Component );
      - id: eee
        text: setVisible( boolean );
      - id: fff
        text: setLayout( Object );
    corrects:
      - aaa
      - ccc
  points:
    - 常用基础类库

- kind: multi_choice
  content: 选择可以建立线程的接口：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Runnable
      - id: bbb
        text: Run
      - id: ccc
        text: 少数用于管理的系统部件
      - id: ddd
        text: Thread
      - id: eee
        text: Executable
    corrects:
      - aaa
  points:
    - 线程

- kind: multi_choice
  content: |
    下面定义的变量能执行那些操作？
    ```java
    String s1 = new String( "Hello" );
    String s2 = new String( "there" );
    String s3 = new String();
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: s3 = s1 + s2;
      - id: bbb
        text: s3 = s1 - s2;
      - id: ccc
        text: s3 = s1 & s2;
      - id: ddd
        text: s3 = s1 && s2;
    corrects:
      - aaa
  points:
    - 常见数据类型

- kind: multi_choice
  content: |
    那个代码能够添加在 //Method here 地方，并能正确执行？
    ```java
      class Base{
        public void amethod( int i ) { }
      }
      public class Scope extends Base{
        public static void main( String argv[] ){
        }
        //Method Here
      }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: void amethod( int i ) throws Exception {}
      - id: bbb
        text: void amethod( long i )throws Exception {}
      - id: ccc
        text: void amethod( long i ){}
      - id: ddd
        text: public void amethod( int i ) throws Exception {}
    corrects:
      - bbb
      - ccc
  points:
    - 语法基础

- kind: multi_choice
  content: public static void main 方法的参数描述是：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: String args[]
      - id: bbb
        text: Strings args[]
      - id: ccc
        text: String args
      - id: ddd
        text: String []args
    corrects:
      - aaa
      - ddd
  points:
    - 语法基础

- kind: multi_choice
  content: 下面哪行代码会在编译的时候出现错误或警告：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: float f = 1.3;
      - id: bbb
        text: char c = "a";
      - id: ccc
        text: byte b = 257;
      - id: ddd
        text: boolean b = null;
      - id: eee
        text: int i = 10;
    corrects:
      - aaa
      - bbb
      - ccc
      - ddd
  points:
    - 语法基础

- kind: multi_choice
  content: 下面那些关键字不是 JAVA 的关键字
  content_format: text
  answer:
    choices:
      - id: aaa
        text: if
      - id: bbb
        text: then
      - id: ccc
        text: goto
      - id: ddd
        text: while
      - id: eee
        text: case
    corrects:
      - bbb
  points:
    - 语法基础

- kind: multi_choice
  content: 下面那些不是合法的变量定义：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 2variable
      - id: bbb
        text: variable2
      - id: ccc
        text: _whatavariable
      - id: ddd
        text: _3_
      - id: eee
        text:
      - id: fff
        text: "#myvar"
    corrects:
      - aaa
      - fff
  points:
    - 语法基础
